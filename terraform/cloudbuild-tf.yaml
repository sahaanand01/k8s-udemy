options:
  env:
    - 'CLOUD_BUILD_LOGS_BUCKET=gs://ci-cd-build-and-deployment-logs-bucket'
steps:
# - name: 'gcr.io/cloud-builders/gsutil'
#   args: ['cp', '${_SERVICE_ACCOUNT_KEY_FILE}', 'service-account-key.json']

# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args:
#     - '-c'
#     - 'export GOOGLE_APPLICATION_CREDENTIALS=${_GOOGLE_APPLICATION_CREDENTIALS} && terraform init'

# - name: 'gcr.io/cloud-builders/terraform'
#   args: ['plan']

- name: ubuntu
  entrypoint: 'bash'
  args: ['-c', 'ls']

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "Setting up environment variables"
    export GOOGLE_APPLICATION_CREDENTIALS="${_GOOGLE_APPLICATION_CREDENTIALS}"

- name: 'hashicorp/terraform:light'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    echo "Initializing Terraform"
    cd terraform
    terraform init \
      -backend-config="bucket=${_TF_STATE_BUCKET}" \
      -backend-config="prefix=terraform/state"

- name: 'hashicorp/terraform:light'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    echo "Planning Terraform"
    cd terraform
    terraform plan -out=tfplan

- name: 'hashicorp/terraform:light'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    echo "Applying Terraform"
    cd terraform
    terraform apply -auto-approve tfplan

# Optional: Clean up the tfplan file
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "Cleaning up"
    rm tfplan

# Define substitutions for environment variables
substitutions:
  _SERVICE_ACCOUNT_KEY_FILE: gs://your-bucket-name/path/to/service-account-key.json
  _GOOGLE_APPLICATION_CREDENTIALS: 'gs://terraform-state-bucket-bkup/credentials/k8s-project-425213-b9f5dc4dc5b6.json'
  _TF_STATE_BUCKET: 'terraform-state-bucket-bkup/stateFiles'


